{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PaulFundMe__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PaulFundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getMapAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf9fc2bf97061eb1dee107f1837eea13f721fbcfb9672da42b2859f516bf76489",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1052840",
    "logsBloom": "0x
    "blockHash": "0xb40097bb2336e7605ee91335cb3e9ea234c0b89f5fde9b190abdc944bb0d5560",
    "transactionHash": "0xf9fc2bf97061eb1dee107f1837eea13f721fbcfb9672da42b2859f516bf76489",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1052840",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "fbc7bc3dbbfb6ba046391a09ee22b782",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PaulFundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaulFundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getMapAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaulFundMe.sol\":\"PaulFundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PaulFundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n//Pragma\\npragma solidity ^0.8.0;\\n//Imports\\nimport \\\"./PaulPriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror PaulFundMe__NotOwner();\\nerror PaulFundMe__CallFailed();\\n\\ncontract PaulFundMe {\\n    //Type Declarations\\n    using PaulPriceConverter for uint256;\\n    // State Variables\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_mapAddressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    //Modifiers\\n    modifier onlyi_Owner() {\\n        if (msg.sender != i_owner) {\\n            revert PaulFundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversion(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n\\n        s_mapAddressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyi_Owner {\\n        for (\\n            uint256 funderIndex;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_mapAddressToAmountFunded[funder] = 0;\\n        }\\n        //-------------Reseting the array----------------\\n        s_funders = new address[](0);\\n\\n        //----------------Withdrawing funds------------------\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert PaulFundMe__CallFailed();\\n        }\\n    }\\n\\n    function cheaperWithdraw() public payable onlyi_Owner {\\n        address[] memory funders = s_funders;\\n        //mapping can't be in memeory\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_mapAddressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getMapAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_mapAddressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xf9584424d4dbcfbe6101cabc45a14cd356e30de2a1f343dc48da6245e2bd14e5\",\"license\":\"MIT\"},\"contracts/PaulPriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PaulPriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1e7cc54d2433018686060a219fdad811769ba4b83c1eaa17b5218ceca7edd3e2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b18800006000553480156200001e57600080fd5b50604051620012d3380380620012d38339818101604052810190620000449190620000da565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000154565b600081519050620000d4816200013a565b92915050565b600060208284031215620000ed57600080fd5b6000620000fd84828501620000c3565b91505092915050565b600062000113826200011a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001458162000106565b81146200015157600080fd5b50565b60805160601c61114b620001886000396000818161027201528181610547015281816106cb015261090e015261114b6000f3fe6080604052600436106100865760003560e01c80637fdcc000116100595780637fdcc00014610135578063893d20e8146101725780639e87a5cd1461019d578063b60d4288146101c8578063be2693f0146101d257610086565b80630ec3b0271461008b5780633a7b6c74146100b65780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100a06101dc565b6040516100ad9190610cfc565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610bb9565b610202565b6040516100ea9190610ce1565b60405180910390f35b3480156100ff57600080fd5b50610108610270565b005b34801561011657600080fd5b5061011f6104f4565b60405161012c9190610d37565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610b90565b6104fa565b6040516101699190610d37565b60405180910390f35b34801561017e57600080fd5b50610187610543565b6040516101949190610ce1565b60405180910390f35b3480156101a957600080fd5b506101b261056b565b6040516101bf9190610cfc565b60405180910390f35b6101d0610595565b005b6101da6106c9565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061023e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f5576040517f1e95bc0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103c757600060018281548110610341577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103bf90610fe6565b9150506102f8565b50600067ffffffffffffffff811115610409577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104375781602001602082028036833780820191505090505b506001908051906020019061044d929190610a80565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047490610ccc565b60006040518083038185875af1925050503d80600081146104b1576040519150601f19603f3d011682016040523d82523d6000602084013e6104b6565b606091505b50509050806104f1576040517ffe4bc46400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60005481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000546105cd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109a490919063ffffffff16565b101561060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060590610d17565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065d9190610d6e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074e576040517f1e95bc0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610788575b5050505050905060005b8151811015610883576000828281518110610820577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061087b90610fe6565b9150506107dc565b50600067ffffffffffffffff8111156108c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156108f35781602001602082028036833780820191505090505b5060019080519060200190610909929190610a80565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161095090610ccc565b60006040518083038185875af1925050503d806000811461098d576040519150601f19603f3d011682016040523d82523d6000602084013e610992565b606091505b50509050806109a057600080fd5b5050565b6000806109b0836109e0565b90506000670de0b6b3a764000085836109c99190610f0c565b6109d39190610dc4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2957600080fd5b505afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190610be2565b5050509150506402540be40081610a789190610df5565b915050919050565b828054828255906000526020600020908101928215610af9579160200282015b82811115610af85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aa0565b5b509050610b069190610b0a565b5090565b5b80821115610b23576000816000905550600101610b0b565b5090565b600081359050610b36816110b9565b92915050565b600081519050610b4b816110d0565b92915050565b600081359050610b60816110e7565b92915050565b600081519050610b75816110e7565b92915050565b600081519050610b8a816110fe565b92915050565b600060208284031215610ba257600080fd5b6000610bb084828501610b27565b91505092915050565b600060208284031215610bcb57600080fd5b6000610bd984828501610b51565b91505092915050565b600080600080600060a08688031215610bfa57600080fd5b6000610c0888828901610b7b565b9550506020610c1988828901610b3c565b9450506040610c2a88828901610b66565b9350506060610c3b88828901610b66565b9250506080610c4c88828901610b7b565b9150509295509295909350565b610c6281610f66565b82525050565b610c7181610fc2565b82525050565b6000610c84601283610d5d565b9150610c8f8261108d565b602082019050919050565b6000610ca7600083610d52565b9150610cb2826110b6565b600082019050919050565b610cc681610fa2565b82525050565b6000610cd782610c9a565b9150819050919050565b6000602082019050610cf66000830184610c59565b92915050565b6000602082019050610d116000830184610c68565b92915050565b60006020820190508181036000830152610d3081610c77565b9050919050565b6000602082019050610d4c6000830184610cbd565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d7982610fa2565b9150610d8483610fa2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610db957610db861102f565b5b828201905092915050565b6000610dcf82610fa2565b9150610dda83610fa2565b925082610dea57610de961105e565b5b828204905092915050565b6000610e0082610f78565b9150610e0b83610f78565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4a57610e4961102f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8757610e8661102f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec457610ec361102f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0157610f0061102f565b5b828202905092915050565b6000610f1782610fa2565b9150610f2283610fa2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5b57610f5a61102f565b5b828202905092915050565b6000610f7182610f82565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610fcd82610fd4565b9050919050565b6000610fdf82610f82565b9050919050565b6000610ff182610fa2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110245761102361102f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b6110c281610f66565b81146110cd57600080fd5b50565b6110d981610f78565b81146110e457600080fd5b50565b6110f081610fa2565b81146110fb57600080fd5b50565b61110781610fac565b811461111257600080fd5b5056fea264697066735822122037681bd799f043b09a585588059bb04329be539c418da1fadc42d4f4a388fe1f64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80637fdcc000116100595780637fdcc00014610135578063893d20e8146101725780639e87a5cd1461019d578063b60d4288146101c8578063be2693f0146101d257610086565b80630ec3b0271461008b5780633a7b6c74146100b65780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100a06101dc565b6040516100ad9190610cfc565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610bb9565b610202565b6040516100ea9190610ce1565b60405180910390f35b3480156100ff57600080fd5b50610108610270565b005b34801561011657600080fd5b5061011f6104f4565b60405161012c9190610d37565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610b90565b6104fa565b6040516101699190610d37565b60405180910390f35b34801561017e57600080fd5b50610187610543565b6040516101949190610ce1565b60405180910390f35b3480156101a957600080fd5b506101b261056b565b6040516101bf9190610cfc565b60405180910390f35b6101d0610595565b005b6101da6106c9565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061023e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f5576040517f1e95bc0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103c757600060018281548110610341577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103bf90610fe6565b9150506102f8565b50600067ffffffffffffffff811115610409577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104375781602001602082028036833780820191505090505b506001908051906020019061044d929190610a80565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047490610ccc565b60006040518083038185875af1925050503d80600081146104b1576040519150601f19603f3d011682016040523d82523d6000602084013e6104b6565b606091505b50509050806104f1576040517ffe4bc46400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60005481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000546105cd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109a490919063ffffffff16565b101561060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060590610d17565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065d9190610d6e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074e576040517f1e95bc0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610788575b5050505050905060005b8151811015610883576000828281518110610820577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061087b90610fe6565b9150506107dc565b50600067ffffffffffffffff8111156108c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156108f35781602001602082028036833780820191505090505b5060019080519060200190610909929190610a80565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161095090610ccc565b60006040518083038185875af1925050503d806000811461098d576040519150601f19603f3d011682016040523d82523d6000602084013e610992565b606091505b50509050806109a057600080fd5b5050565b6000806109b0836109e0565b90506000670de0b6b3a764000085836109c99190610f0c565b6109d39190610dc4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2957600080fd5b505afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190610be2565b5050509150506402540be40081610a789190610df5565b915050919050565b828054828255906000526020600020908101928215610af9579160200282015b82811115610af85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aa0565b5b509050610b069190610b0a565b5090565b5b80821115610b23576000816000905550600101610b0b565b5090565b600081359050610b36816110b9565b92915050565b600081519050610b4b816110d0565b92915050565b600081359050610b60816110e7565b92915050565b600081519050610b75816110e7565b92915050565b600081519050610b8a816110fe565b92915050565b600060208284031215610ba257600080fd5b6000610bb084828501610b27565b91505092915050565b600060208284031215610bcb57600080fd5b6000610bd984828501610b51565b91505092915050565b600080600080600060a08688031215610bfa57600080fd5b6000610c0888828901610b7b565b9550506020610c1988828901610b3c565b9450506040610c2a88828901610b66565b9350506060610c3b88828901610b66565b9250506080610c4c88828901610b7b565b9150509295509295909350565b610c6281610f66565b82525050565b610c7181610fc2565b82525050565b6000610c84601283610d5d565b9150610c8f8261108d565b602082019050919050565b6000610ca7600083610d52565b9150610cb2826110b6565b600082019050919050565b610cc681610fa2565b82525050565b6000610cd782610c9a565b9150819050919050565b6000602082019050610cf66000830184610c59565b92915050565b6000602082019050610d116000830184610c68565b92915050565b60006020820190508181036000830152610d3081610c77565b9050919050565b6000602082019050610d4c6000830184610cbd565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d7982610fa2565b9150610d8483610fa2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610db957610db861102f565b5b828201905092915050565b6000610dcf82610fa2565b9150610dda83610fa2565b925082610dea57610de961105e565b5b828204905092915050565b6000610e0082610f78565b9150610e0b83610f78565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4a57610e4961102f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8757610e8661102f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec457610ec361102f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0157610f0061102f565b5b828202905092915050565b6000610f1782610fa2565b9150610f2283610fa2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5b57610f5a61102f565b5b828202905092915050565b6000610f7182610f82565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610fcd82610fd4565b9050919050565b6000610fdf82610f82565b9050919050565b6000610ff182610fa2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110245761102361102f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b6110c281610f66565b81146110cd57600080fd5b50565b6110d981610f78565b81146110e457600080fd5b50565b6110f081610fa2565b81146110fb57600080fd5b50565b61110781610fac565b811461111257600080fd5b5056fea264697066735822122037681bd799f043b09a585588059bb04329be539c418da1fadc42d4f4a388fe1f64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 64,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "s_mapAddressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}