{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7ef039272ef795116ec0f36a8726567adc006359a50889bb5e42dbfa2832426b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "848708",
    "logsBloom": "0x
    "blockHash": "0x7d27679b53b563760d41d62a87259777e6c30dd5c34740e9dfe0fc8fe68523bb",
    "transactionHash": "0x7ef039272ef795116ec0f36a8726567adc006359a50889bb5e42dbfa2832426b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "848708",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9c5cad8f0b9d4465525ef3b2dc1ec082",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaulFundMe.sol\":\"PaulFundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PaulFundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PaulPriceConverter.sol\\\";\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror NotOwner();\\nerror CallFailed();\\n\\ncontract PaulFundMe {\\n    using PaulPriceConverter for uint256;\\n\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public mapAddressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversion(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        mapAddressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function Withdraw() public onlyi_Owner {\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            mapAddressToAmountFunded[funder] = 0;\\n        }\\n        //-------------Reseting the array----------------\\n        funders = new address[](0);\\n\\n        //----------------Withdrawing funds------------------\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert CallFailed();\\n        }\\n    }\\n\\n    modifier onlyi_Owner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x6cc2ebc2164d381eb3cab6bd71f6efacdf0c6f26d9aef838f3bf540751a39aa0\",\"license\":\"MIT\"},\"contracts/PaulPriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PaulPriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        return (ethPrice * ethAmount) / 1e18;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3f92ce2a857065707697f4e45fbe06dcbf45774ce9b1590fda8ff7176361b605\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610efa380380610efa833981810160405281019061003f91906100d2565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610144565b6000815190506100cc8161012d565b92915050565b6000602082840312156100e457600080fd5b60006100f2848285016100bd565b91505092915050565b60006101068261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610136816100fb565b811461014157600080fd5b50565b60805160601c610d91610169600039600081816101ab015261058f0152610d916000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b8063103ac8481461007557806357ea89b6146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107d6565b610191565b6040516100a9919061097d565b60405180910390f35b3480156100be57600080fd5b506100c76101a9565b005b3480156100d557600080fd5b506100de61042d565b6040516100eb919061097d565b60405180910390f35b34801561010057600080fd5b50610109610433565b6040516101169190610942565b60405180910390f35b610127610459565b005b34801561013557600080fd5b5061013e61058d565b60405161014b9190610927565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906107ff565b6105b1565b6040516101889190610927565b60405180910390f35b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103005760006001828154811061027a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102f890610c2c565b915050610231565b50600067ffffffffffffffff811115610342577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103705781602001602082028036833780820191505090505b50600190805190602001906103869291906106c6565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ad90610912565b60006040518083038185875af1925050503d80600081146103ea576040519150601f19603f3d011682016040523d82523d6000602084013e6103ef565b606091505b505090508061042a576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610491600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f090919063ffffffff16565b10156104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c99061095d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058491906109b4565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105c157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105fc83610626565b9050670de0b6b3a764000084826106139190610b52565b61061d9190610a0a565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066f57600080fd5b505afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190610828565b5050509150506402540be400816106be9190610a3b565b915050919050565b82805482825590600052602060002090810192821561073f579160200282015b8281111561073e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106e6565b5b50905061074c9190610750565b5090565b5b80821115610769576000816000905550600101610751565b5090565b60008135905061077c81610cff565b92915050565b60008151905061079181610d16565b92915050565b6000813590506107a681610d2d565b92915050565b6000815190506107bb81610d2d565b92915050565b6000815190506107d081610d44565b92915050565b6000602082840312156107e857600080fd5b60006107f68482850161076d565b91505092915050565b60006020828403121561081157600080fd5b600061081f84828501610797565b91505092915050565b600080600080600060a0868803121561084057600080fd5b600061084e888289016107c1565b955050602061085f88828901610782565b9450506040610870888289016107ac565b9350506060610881888289016107ac565b9250506080610892888289016107c1565b9150509295509295909350565b6108a881610bac565b82525050565b6108b781610c08565b82525050565b60006108ca6012836109a3565b91506108d582610cd3565b602082019050919050565b60006108ed600083610998565b91506108f882610cfc565b600082019050919050565b61090c81610be8565b82525050565b600061091d826108e0565b9150819050919050565b600060208201905061093c600083018461089f565b92915050565b600060208201905061095760008301846108ae565b92915050565b60006020820190508181036000830152610976816108bd565b9050919050565b60006020820190506109926000830184610903565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109bf82610be8565b91506109ca83610be8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109ff576109fe610c75565b5b828201905092915050565b6000610a1582610be8565b9150610a2083610be8565b925082610a3057610a2f610ca4565b5b828204905092915050565b6000610a4682610bbe565b9150610a5183610bbe565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a9057610a8f610c75565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610acd57610acc610c75565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b0a57610b09610c75565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b4757610b46610c75565b5b828202905092915050565b6000610b5d82610be8565b9150610b6883610be8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ba157610ba0610c75565b5b828202905092915050565b6000610bb782610bc8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c1382610c1a565b9050919050565b6000610c2582610bc8565b9050919050565b6000610c3782610be8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6a57610c69610c75565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b610d0881610bac565b8114610d1357600080fd5b50565b610d1f81610bbe565b8114610d2a57600080fd5b50565b610d3681610be8565b8114610d4157600080fd5b50565b610d4d81610bf2565b8114610d5857600080fd5b5056fea26469706673582212200db4abb4fc3f744203370cb090627d8f0c10c667d6399a8adb98e7daf9e91c6664736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b8063103ac8481461007557806357ea89b6146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107d6565b610191565b6040516100a9919061097d565b60405180910390f35b3480156100be57600080fd5b506100c76101a9565b005b3480156100d557600080fd5b506100de61042d565b6040516100eb919061097d565b60405180910390f35b34801561010057600080fd5b50610109610433565b6040516101169190610942565b60405180910390f35b610127610459565b005b34801561013557600080fd5b5061013e61058d565b60405161014b9190610927565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906107ff565b6105b1565b6040516101889190610927565b60405180910390f35b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103005760006001828154811061027a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102f890610c2c565b915050610231565b50600067ffffffffffffffff811115610342577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103705781602001602082028036833780820191505090505b50600190805190602001906103869291906106c6565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ad90610912565b60006040518083038185875af1925050503d80600081146103ea576040519150601f19603f3d011682016040523d82523d6000602084013e6103ef565b606091505b505090508061042a576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610491600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f090919063ffffffff16565b10156104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c99061095d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058491906109b4565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105c157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105fc83610626565b9050670de0b6b3a764000084826106139190610b52565b61061d9190610a0a565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066f57600080fd5b505afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190610828565b5050509150506402540be400816106be9190610a3b565b915050919050565b82805482825590600052602060002090810192821561073f579160200282015b8281111561073e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106e6565b5b50905061074c9190610750565b5090565b5b80821115610769576000816000905550600101610751565b5090565b60008135905061077c81610cff565b92915050565b60008151905061079181610d16565b92915050565b6000813590506107a681610d2d565b92915050565b6000815190506107bb81610d2d565b92915050565b6000815190506107d081610d44565b92915050565b6000602082840312156107e857600080fd5b60006107f68482850161076d565b91505092915050565b60006020828403121561081157600080fd5b600061081f84828501610797565b91505092915050565b600080600080600060a0868803121561084057600080fd5b600061084e888289016107c1565b955050602061085f88828901610782565b9450506040610870888289016107ac565b9350506060610881888289016107ac565b9250506080610892888289016107c1565b9150509295509295909350565b6108a881610bac565b82525050565b6108b781610c08565b82525050565b60006108ca6012836109a3565b91506108d582610cd3565b602082019050919050565b60006108ed600083610998565b91506108f882610cfc565b600082019050919050565b61090c81610be8565b82525050565b600061091d826108e0565b9150819050919050565b600060208201905061093c600083018461089f565b92915050565b600060208201905061095760008301846108ae565b92915050565b60006020820190508181036000830152610976816108bd565b9050919050565b60006020820190506109926000830184610903565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109bf82610be8565b91506109ca83610be8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109ff576109fe610c75565b5b828201905092915050565b6000610a1582610be8565b9150610a2083610be8565b925082610a3057610a2f610ca4565b5b828204905092915050565b6000610a4682610bbe565b9150610a5183610bbe565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a9057610a8f610c75565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610acd57610acc610c75565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b0a57610b09610c75565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b4757610b46610c75565b5b828202905092915050565b6000610b5d82610be8565b9150610b6883610be8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ba157610ba0610c75565b5b828202905092915050565b6000610bb782610bc8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c1382610c1a565b9050919050565b6000610c2582610bc8565b9050919050565b6000610c3782610be8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6a57610c69610c75565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b610d0881610bac565b8114610d1357600080fd5b50565b610d1f81610bbe565b8114610d2a57600080fd5b50565b610d3681610be8565b8114610d4157600080fd5b50565b610d4d81610bf2565b8114610d5857600080fd5b5056fea26469706673582212200db4abb4fc3f744203370cb090627d8f0c10c667d6399a8adb98e7daf9e91c6664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 64,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "mapAddressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}