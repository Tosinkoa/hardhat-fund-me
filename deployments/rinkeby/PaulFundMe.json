{
  "address": "0x562326eDDaF490F90f7B08BA8A463025C2C4435C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PaulFundMe__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PaulFundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd0560eb58ebe3198efe3711762e3c2baa9e0ee66b49785db819b658ae547aa54",
  "receipt": {
    "to": null,
    "from": "0x2Ca6107420f5c13d04A73ce9523409033D28d1C5",
    "contractAddress": "0x562326eDDaF490F90f7B08BA8A463025C2C4435C",
    "transactionIndex": 8,
    "gasUsed": "853766",
    "logsBloom": "0x
    "blockHash": "0x62a7f9dee74a099fbed5652b63a88900810a61be52d4824305e57647a4039713",
    "transactionHash": "0xd0560eb58ebe3198efe3711762e3c2baa9e0ee66b49785db819b658ae547aa54",
    "logs": [],
    "blockNumber": 10872533,
    "cumulativeGasUsed": "1731737",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "6632a101d3a272f567134735ca2287f3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PaulFundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaulFundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaulFundMe.sol\":\"PaulFundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PaulFundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\n//Pragma\\npragma solidity ^0.8.0;\\n//Imports\\nimport \\\"./PaulPriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror PaulFundMe__NotOwner();\\nerror PaulFundMe__CallFailed();\\n\\ncontract PaulFundMe {\\n    //Type Declarations\\n    using PaulPriceConverter for uint256;\\n    // State Variables\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public mapAddressToAmountFunded;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    //Modifiers\\n    modifier onlyi_Owner() {\\n        if (msg.sender != i_owner) {\\n            revert PaulFundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversion(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        mapAddressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function Withdraw() public onlyi_Owner {\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            mapAddressToAmountFunded[funder] = 0;\\n        }\\n        //-------------Reseting the array----------------\\n        funders = new address[](0);\\n\\n        //----------------Withdrawing funds------------------\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert PaulFundMe__CallFailed();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0cbde4cc6991ecee254bcc57464dee77c8a9a6b3f542180c10f688fadc416b50\",\"license\":\"MIT\"},\"contracts/PaulPriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PaulPriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        return (ethPrice * ethAmount) / 1e18;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3f92ce2a857065707697f4e45fbe06dcbf45774ce9b1590fda8ff7176361b605\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f12380380610f12833981810160405281019061003f91906100d2565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610144565b6000815190506100cc8161012d565b92915050565b6000602082840312156100e457600080fd5b60006100f2848285016100bd565b91505092915050565b60006101068261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610136816100fb565b811461014157600080fd5b50565b60805160601c610da9610169600039600081816102f701526105a70152610da96000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063103ac8481461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107ee565b6102dd565b6040516100c19190610995565b60405180910390f35b3480156100d657600080fd5b506100df6102f5565b005b3480156100ed57600080fd5b506100f6610579565b6040516101039190610995565b60405180910390f35b34801561011857600080fd5b5061012161057f565b60405161012e919061095a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105a5565b604051610163919061093f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610817565b6105c9565b6040516101a0919061093f565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060890919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610975565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906109cc565b92505081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037a576040517f1e95bc0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044c576000600182815481106103c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044490610c44565b91505061037d565b50600067ffffffffffffffff81111561048e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600190805190602001906104d29291906106de565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f99061092a565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b5050905080610576576040517ffe4bc46400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105d957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106148361063e565b9050670de0b6b3a7640000848261062b9190610b6a565b6106359190610a22565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190610840565b5050509150506402540be400816106d69190610a53565b915050919050565b828054828255906000526020600020908101928215610757579160200282015b828111156107565782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106fe565b5b5090506107649190610768565b5090565b5b80821115610781576000816000905550600101610769565b5090565b60008135905061079481610d17565b92915050565b6000815190506107a981610d2e565b92915050565b6000813590506107be81610d45565b92915050565b6000815190506107d381610d45565b92915050565b6000815190506107e881610d5c565b92915050565b60006020828403121561080057600080fd5b600061080e84828501610785565b91505092915050565b60006020828403121561082957600080fd5b6000610837848285016107af565b91505092915050565b600080600080600060a0868803121561085857600080fd5b6000610866888289016107d9565b95505060206108778882890161079a565b9450506040610888888289016107c4565b9350506060610899888289016107c4565b92505060806108aa888289016107d9565b9150509295509295909350565b6108c081610bc4565b82525050565b6108cf81610c20565b82525050565b60006108e26012836109bb565b91506108ed82610ceb565b602082019050919050565b60006109056000836109b0565b915061091082610d14565b600082019050919050565b61092481610c00565b82525050565b6000610935826108f8565b9150819050919050565b600060208201905061095460008301846108b7565b92915050565b600060208201905061096f60008301846108c6565b92915050565b6000602082019050818103600083015261098e816108d5565b9050919050565b60006020820190506109aa600083018461091b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109d782610c00565b91506109e283610c00565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1757610a16610c8d565b5b828201905092915050565b6000610a2d82610c00565b9150610a3883610c00565b925082610a4857610a47610cbc565b5b828204905092915050565b6000610a5e82610bd6565b9150610a6983610bd6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610aa857610aa7610c8d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ae557610ae4610c8d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b2257610b21610c8d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b5f57610b5e610c8d565b5b828202905092915050565b6000610b7582610c00565b9150610b8083610c00565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb957610bb8610c8d565b5b828202905092915050565b6000610bcf82610be0565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c2b82610c32565b9050919050565b6000610c3d82610be0565b9050919050565b6000610c4f82610c00565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8257610c81610c8d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b610d2081610bc4565b8114610d2b57600080fd5b50565b610d3781610bd6565b8114610d4257600080fd5b50565b610d4e81610c00565b8114610d5957600080fd5b50565b610d6581610c0a565b8114610d7057600080fd5b5056fea26469706673582212202822e0910fe8da19c15e0a0ba6dee01fcae631f281d10d255924e6019e2b457964736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063103ac8481461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107ee565b6102dd565b6040516100c19190610995565b60405180910390f35b3480156100d657600080fd5b506100df6102f5565b005b3480156100ed57600080fd5b506100f6610579565b6040516101039190610995565b60405180910390f35b34801561011857600080fd5b5061012161057f565b60405161012e919061095a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105a5565b604051610163919061093f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610817565b6105c9565b6040516101a0919061093f565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060890919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610975565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906109cc565b92505081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037a576040517f1e95bc0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044c576000600182815481106103c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044490610c44565b91505061037d565b50600067ffffffffffffffff81111561048e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600190805190602001906104d29291906106de565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f99061092a565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b5050905080610576576040517ffe4bc46400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105d957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106148361063e565b9050670de0b6b3a7640000848261062b9190610b6a565b6106359190610a22565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190610840565b5050509150506402540be400816106d69190610a53565b915050919050565b828054828255906000526020600020908101928215610757579160200282015b828111156107565782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106fe565b5b5090506107649190610768565b5090565b5b80821115610781576000816000905550600101610769565b5090565b60008135905061079481610d17565b92915050565b6000815190506107a981610d2e565b92915050565b6000813590506107be81610d45565b92915050565b6000815190506107d381610d45565b92915050565b6000815190506107e881610d5c565b92915050565b60006020828403121561080057600080fd5b600061080e84828501610785565b91505092915050565b60006020828403121561082957600080fd5b6000610837848285016107af565b91505092915050565b600080600080600060a0868803121561085857600080fd5b6000610866888289016107d9565b95505060206108778882890161079a565b9450506040610888888289016107c4565b9350506060610899888289016107c4565b92505060806108aa888289016107d9565b9150509295509295909350565b6108c081610bc4565b82525050565b6108cf81610c20565b82525050565b60006108e26012836109bb565b91506108ed82610ceb565b602082019050919050565b60006109056000836109b0565b915061091082610d14565b600082019050919050565b61092481610c00565b82525050565b6000610935826108f8565b9150819050919050565b600060208201905061095460008301846108b7565b92915050565b600060208201905061096f60008301846108c6565b92915050565b6000602082019050818103600083015261098e816108d5565b9050919050565b60006020820190506109aa600083018461091b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109d782610c00565b91506109e283610c00565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1757610a16610c8d565b5b828201905092915050565b6000610a2d82610c00565b9150610a3883610c00565b925082610a4857610a47610cbc565b5b828204905092915050565b6000610a5e82610bd6565b9150610a6983610bd6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610aa857610aa7610c8d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ae557610ae4610c8d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b2257610b21610c8d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b5f57610b5e610c8d565b5b828202905092915050565b6000610b7582610c00565b9150610b8083610c00565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb957610bb8610c8d565b5b828202905092915050565b6000610bcf82610be0565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c2b82610c32565b9050919050565b6000610c3d82610be0565b9050919050565b6000610c4f82610c00565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8257610c81610c8d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b610d2081610bc4565b8114610d2b57600080fd5b50565b610d3781610bd6565b8114610d4257600080fd5b50565b610d4e81610c00565b8114610d5957600080fd5b50565b610d6581610c0a565b8114610d7057600080fd5b5056fea26469706673582212202822e0910fe8da19c15e0a0ba6dee01fcae631f281d10d255924e6019e2b457964736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 64,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "mapAddressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/PaulFundMe.sol:PaulFundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}